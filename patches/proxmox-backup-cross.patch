diff --git a/docs/Makefile b/docs/Makefile
index 950cd644..1ba51c00 100644
--- a/docs/Makefile
+++ b/docs/Makefile
@@ -65,16 +65,16 @@ ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(SPHINXOPTS) .
 all: ${MAN1_PAGES} ${MAN5_PAGES}
 
 config/%/config.rst: ${COMPILEDIR}/docgen
-	${COMPILEDIR}/docgen $*.cfg >$@
+	qemu-aarch64 ${COMPILEDIR}/docgen $*.cfg >$@
 
 config/acl/roles.rst: ${COMPILEDIR}/docgen
-	${COMPILEDIR}/docgen "config::acl::Role" >$@
+	qemu-aarch64 ${COMPILEDIR}/docgen "config::acl::Role" >$@
 
 %/synopsis.rst: ${COMPILEDIR}/%
-	$< printdoc > $@
+	qemu-aarch64 $< printdoc > $@
 
 proxmox-backup-client/catalog-shell-synopsis.rst: ${COMPILEDIR}/dump-catalog-shell-cli
-	${COMPILEDIR}/dump-catalog-shell-cli > proxmox-backup-client/catalog-shell-synopsis.rst
+	qemu-aarch64 ${COMPILEDIR}/dump-catalog-shell-cli > proxmox-backup-client/catalog-shell-synopsis.rst
 
 ${MAN1_PAGES} ${MAN5_PAGES}: man-pages
 
@@ -89,7 +89,7 @@ onlinehelpinfo:
 	@echo "Build finished. OnlineHelpInfo.js is in $(BUILDDIR)/scanrefs."
 
 api-viewer/apidata.js: ${COMPILEDIR}/docgen
-	${COMPILEDIR}/docgen apidata.js >$@
+	qemu-aarch64 ${COMPILEDIR}/docgen apidata.js >$@
 
 api-viewer/apidoc.js: ${API_VIEWER_FILES}
 	cat ${API_VIEWER_FILES} >$@.tmp
diff --git a/pxar-bin/tests/pxar.rs b/pxar-bin/tests/pxar.rs
index 23559bad..2b6f9a4a 100644
--- a/pxar-bin/tests/pxar.rs
+++ b/pxar-bin/tests/pxar.rs
@@ -17,7 +17,8 @@ fn pxar_create_and_extract() {
 
     println!("run '{} create archive.pxar {}'", exec_path, src_dir);
 
-    Command::new(&exec_path)
+    Command::new("qemu-aarch64")
+        .arg(&exec_path)
         .arg("create")
         .arg("./tests/archive.pxar")
         .arg(src_dir)
@@ -26,7 +27,8 @@ fn pxar_create_and_extract() {
 
     println!("run '{} extract archive.pxar {}'", exec_path, dest_dir);
 
-    Command::new(&exec_path)
+    Command::new("qemu-aarch64")
+        .arg(&exec_path)
         .arg("extract")
         .arg("./tests/archive.pxar")
         .arg("--target")
@@ -91,7 +93,8 @@ fn pxar_list_with_payload_input() {
         format!("../target/{target_subdir}/release/pxar")
     };
 
-    let output = Command::new(exec_path)
+    let output = Command::new("qemu-aarch64")
+        .arg(&exec_path)
         .args([
             "list",
             "../tests/pxar/backup-client-pxar-expected.mpxar",
